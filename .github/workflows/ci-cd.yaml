name: CI/CD

on:
  push:
    branches:
      - main
env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
  SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
  ECS_TASK_DEFINITION: ${{ secrets.ECS_TASK_DEFINITION }}
  AWS_SUBNETS: ${{ secrets.AWS_SUBNETS }}
  AWS_SECURITY_GROUPS: ${{ secrets.AWS_SECURITY_GROUPS }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup AWS resources (ECR, ECS cluster)
        run: bash infra/aws-deploy.sh setup

      - name: Set tag version
        run: echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image
        run: |
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${IMAGE_TAG}"
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          docker build -t $IMAGE_URI -f cars_api/Dockerfile cars_api
          docker push $IMAGE_URI

      - name: Deploy to ECS Fargate
        run: bash infra/aws-deploy.sh deploy
